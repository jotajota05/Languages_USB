-----------------------------------------------------------------------------
Info file generated by Happy Version 1.17 from Parser.y
-----------------------------------------------------------------------------

state 23 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> START                             (0)
	START -> START beginworld Id WORLD endworld        (1)
	START -> START defineinstruction Id as INSTRUCTION   (2)
	START -> START beginworkon Id INSTRUCTION endwork   (3)
	START -> beginworld Id WORLD endworld              (4)
	START -> defineinstruction Id as INSTRUCTION       (5)
	START -> beginworkon Id INSTRUCTION endwork        (6)
	WORLD -> SEENWORLD World EJEX EJEY                 (7)
	WORLD -> SEENSTART Startat EJEX EJEY heading DIRECTION   (8)
	WORLD -> WORLD WALLorPLACE                         (9)
	SEENWORLD -> SEENSTARTandWORLD Startat EJEX EJEY heading DIRECTION   (10)
	SEENWORLD -> SEENWORLD WALLorPLACE                 (11)
	SEENWORLD -> Startat EJEX EJEY heading DIRECTION   (12)
	SEENSTART -> SEENSTARTandWORLD World EJEX EJEY     (13)
	SEENSTART -> SEENSTART WALLorPLACE                 (14)
	SEENSTART -> World EJEX EJEY                       (15)
	SEENSTARTandWORLD -> SEENSTARTandWORLD WALLorPLACE   (16)
	SEENSTARTandWORLD -> WALLorPLACE                   (17)
	WALLorPLACE -> Wall LISTAPARED                     (18)
	WALLorPLACE -> Place LISTAGARBAGE                  (19)
	EJEX -> int                                        (20)
	EJEY -> int                                        (21)
	DIRECTION -> north                                 (22)
	DIRECTION -> south                                 (23)
	DIRECTION -> east                                  (24)
	DIRECTION -> west                                  (25)
	LISTAPARED -> LISTAPARED ',' PARED                 (26)
	LISTAPARED -> PARED                                (27)
	PARED -> DIRECTION of EJEX EJEY to EJEX EJEY       (28)
	LISTAGARBAGE -> LISTAGARBAGE ',' GARBAGE           (29)
	LISTAGARBAGE -> GARBAGE                            (30)
	GARBAGE -> int garbagecansin EJEX EJEY             (31)
	INSTRUCTION -> begin LISTAINSTRUCTION end          (32)
	INSTRUCTION -> INSTIF                              (33)
	INSTRUCTION -> INSTIF else INSTRUCTION             (34)
	INSTRUCTION -> repeat int times INSTRUCTION        (35)
	INSTRUCTION -> while BOOL do INSTRUCTION           (36)
	INSTRUCTION -> move                                (37)
	INSTRUCTION -> turnleft                            (38)
	INSTRUCTION -> picktrash                           (39)
	INSTRUCTION -> droptrash                           (40)
	INSTRUCTION -> shutdown                            (41)
	INSTRUCTION -> Id                                  (42)
	INSTIF -> if BOOL then INSTRUCTION                 (43)
	LISTAINSTRUCTION -> LISTAINSTRUCTION ';' INSTRUCTION   (44)
	LISTAINSTRUCTION -> INSTRUCTION                    (45)
	BOOL -> BOOL or BOOL                               (46)
	BOOL -> BOOL and BOOL                              (47)
	BOOL -> not BOOL                                   (48)
	BOOL -> frontisclear                               (49)
	BOOL -> leftisclear                                (50)
	BOOL -> rightisclear                               (51)
	BOOL -> lookingnorth                               (52)
	BOOL -> lookingsouth                               (53)
	BOOL -> lookingeast                                (54)
	BOOL -> lookingwest                                (55)
	BOOL -> foundtrash                                 (56)
	BOOL -> carryingtrash                              (57)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	';'            { TkPuntoyComa p }
	','            { TkComa p }
	int            { TkNum p s }
	beginworld     { Tkbeginworld p }
	endworld       { Tkendworld p }
	World          { TkWorld p }
	Wall           { TkWall p }
	of             { Tkof p }
	to             { Tkto p }
	Place          { TkPlace p }
	garbagecansin  { Tkgarbage p }
	Startat        { Tkstart p }
	heading        { Tkheading p }
	north          { Tknorth p }
	south          { Tksouth p }
	east           { Tkeast p }
	west           { Tkwest p }
	beginworkon    { Tkbeginwork p }
	endwork        { Tkendwork p }
	if             { Tkif p }
	then           { Tkthen p }
	else           { Tkelse p }
	repeat         { Tkrepeat p }
	times          { Tktimes p }
	while          { Tkwhile p }
	do             { Tkdo p }
	begin          { Tkbegin p }
	end            { Tkend p }
	move           { Tkmove p }
	turnleft       { Tkturnleft p }
	picktrash      { Tkpicktrash p }
	droptrash      { Tkdroptrash p }
	shutdown       { Tkshutdown p }
	frontisclear   { Tkfrontisclear p }
	leftisclear    { Tkleftisclear p }
	rightisclear   { Tkrightisclear p }
	lookingnorth   { Tklookingnorth p }
	lookingeast    { Tklookingeast p }
	lookingwest    { Tklookingwest p }
	lookingsouth   { Tklookingsouth p }
	foundtrash     { Tkfoundtrash p }
	carryingtrash  { Tkcarryingtrash p }
	not            { Tknot p }
	and            { Tkand p }
	or             { Tkor p }
	defineinstruction{ Tkdefineinstruction p }
	as             { Tkas p }
	Id             { TkId p s }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	START           rules 1, 2, 3, 4, 5, 6
	WORLD           rules 7, 8, 9
	SEENWORLD       rules 10, 11, 12
	SEENSTART       rules 13, 14, 15
	SEENSTARTandWORLD rules 16, 17
	WALLorPLACE     rules 18, 19
	EJEX            rule  20
	EJEY            rule  21
	DIRECTION       rules 22, 23, 24, 25
	LISTAPARED      rules 26, 27
	PARED           rule  28
	LISTAGARBAGE    rules 29, 30
	GARBAGE         rule  31
	INSTRUCTION     rules 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
	INSTIF          rule  43
	LISTAINSTRUCTION rules 44, 45
	BOOL            rules 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	beginworld     shift, and enter state 3
	beginworkon    shift, and enter state 4
	defineinstructionshift, and enter state 5

	START          goto state 6

State 1


	beginworld     shift, and enter state 3
	beginworkon    shift, and enter state 4
	defineinstructionshift, and enter state 5

	START          goto state 2

State 2

	START -> START . beginworld Id WORLD endworld       (rule 1)
	START -> START . defineinstruction Id as INSTRUCTION    (rule 2)
	START -> START . beginworkon Id INSTRUCTION endwork    (rule 3)

	beginworld     shift, and enter state 7
	beginworkon    shift, and enter state 8
	defineinstructionshift, and enter state 9


State 3

	START -> beginworld . Id WORLD endworld             (rule 4)

	Id             shift, and enter state 12


State 4

	START -> beginworkon . Id INSTRUCTION endwork       (rule 6)

	Id             shift, and enter state 11


State 5

	START -> defineinstruction . Id as INSTRUCTION      (rule 5)

	Id             shift, and enter state 10


State 6

	%start_parser -> START .                            (rule 0)
	START -> START . beginworld Id WORLD endworld       (rule 1)
	START -> START . defineinstruction Id as INSTRUCTION    (rule 2)
	START -> START . beginworkon Id INSTRUCTION endwork    (rule 3)

	beginworld     shift, and enter state 7
	beginworkon    shift, and enter state 8
	defineinstructionshift, and enter state 9
	%eof           accept


State 7

	START -> START beginworld . Id WORLD endworld       (rule 1)

	Id             shift, and enter state 37


State 8

	START -> START beginworkon . Id INSTRUCTION endwork    (rule 3)

	Id             shift, and enter state 36


State 9

	START -> START defineinstruction . Id as INSTRUCTION    (rule 2)

	Id             shift, and enter state 35


State 10

	START -> defineinstruction Id . as INSTRUCTION      (rule 5)

	as             shift, and enter state 34


State 11

	START -> beginworkon Id . INSTRUCTION endwork       (rule 6)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 22
	INSTIF         goto state 23

State 12

	START -> beginworld Id . WORLD endworld             (rule 4)

	World          shift, and enter state 18
	Wall           shift, and enter state 19
	Place          shift, and enter state 20
	Startat        shift, and enter state 21

	WORLD          goto state 13
	SEENWORLD      goto state 14
	SEENSTART      goto state 15
	SEENSTARTandWORLDgoto state 16
	WALLorPLACE    goto state 17

State 13

	START -> beginworld Id WORLD . endworld             (rule 4)
	WORLD -> WORLD . WALLorPLACE                        (rule 9)

	endworld       shift, and enter state 80
	Wall           shift, and enter state 19
	Place          shift, and enter state 20

	WALLorPLACE    goto state 79

State 14

	WORLD -> SEENWORLD . World EJEX EJEY                (rule 7)
	SEENWORLD -> SEENWORLD . WALLorPLACE                (rule 11)

	World          shift, and enter state 78
	Wall           shift, and enter state 19
	Place          shift, and enter state 20

	WALLorPLACE    goto state 77

State 15

	WORLD -> SEENSTART . Startat EJEX EJEY heading DIRECTION    (rule 8)
	SEENSTART -> SEENSTART . WALLorPLACE                (rule 14)

	Wall           shift, and enter state 19
	Place          shift, and enter state 20
	Startat        shift, and enter state 76

	WALLorPLACE    goto state 75

State 16

	SEENWORLD -> SEENSTARTandWORLD . Startat EJEX EJEY heading DIRECTION    (rule 10)
	SEENSTART -> SEENSTARTandWORLD . World EJEX EJEY    (rule 13)
	SEENSTARTandWORLD -> SEENSTARTandWORLD . WALLorPLACE    (rule 16)

	World          shift, and enter state 73
	Wall           shift, and enter state 19
	Place          shift, and enter state 20
	Startat        shift, and enter state 74

	WALLorPLACE    goto state 72

State 17

	SEENSTARTandWORLD -> WALLorPLACE .                  (rule 17)

	World          reduce using rule 17
	Wall           reduce using rule 17
	Place          reduce using rule 17
	Startat        reduce using rule 17


State 18

	SEENSTART -> World . EJEX EJEY                      (rule 15)

	int            shift, and enter state 60

	EJEX           goto state 71

State 19

	WALLorPLACE -> Wall . LISTAPARED                    (rule 18)

	north          shift, and enter state 67
	south          shift, and enter state 68
	east           shift, and enter state 69
	west           shift, and enter state 70

	DIRECTION      goto state 64
	LISTAPARED     goto state 65
	PARED          goto state 66

State 20

	WALLorPLACE -> Place . LISTAGARBAGE                 (rule 19)

	int            shift, and enter state 63

	LISTAGARBAGE   goto state 61
	GARBAGE        goto state 62

State 21

	SEENWORLD -> Startat . EJEX EJEY heading DIRECTION    (rule 12)

	int            shift, and enter state 60

	EJEX           goto state 59

State 22

	START -> beginworkon Id INSTRUCTION . endwork       (rule 6)

	endwork        shift, and enter state 58


State 23

	INSTRUCTION -> INSTIF .                             (rule 33)
	INSTRUCTION -> INSTIF . else INSTRUCTION            (rule 34)

	';'            reduce using rule 33
	beginworld     reduce using rule 33
	beginworkon    reduce using rule 33
	endwork        reduce using rule 33
	else           shift, and enter state 57
			(reduce using rule 33)

	end            reduce using rule 33
	defineinstructionreduce using rule 33
	%eof           reduce using rule 33


State 24

	INSTIF -> if . BOOL then INSTRUCTION                (rule 43)

	frontisclear   shift, and enter state 45
	leftisclear    shift, and enter state 46
	rightisclear   shift, and enter state 47
	lookingnorth   shift, and enter state 48
	lookingeast    shift, and enter state 49
	lookingwest    shift, and enter state 50
	lookingsouth   shift, and enter state 51
	foundtrash     shift, and enter state 52
	carryingtrash  shift, and enter state 53
	not            shift, and enter state 54

	BOOL           goto state 56

State 25

	INSTRUCTION -> repeat . int times INSTRUCTION       (rule 35)

	int            shift, and enter state 55


State 26

	INSTRUCTION -> while . BOOL do INSTRUCTION          (rule 36)

	frontisclear   shift, and enter state 45
	leftisclear    shift, and enter state 46
	rightisclear   shift, and enter state 47
	lookingnorth   shift, and enter state 48
	lookingeast    shift, and enter state 49
	lookingwest    shift, and enter state 50
	lookingsouth   shift, and enter state 51
	foundtrash     shift, and enter state 52
	carryingtrash  shift, and enter state 53
	not            shift, and enter state 54

	BOOL           goto state 44

State 27

	INSTRUCTION -> begin . LISTAINSTRUCTION end         (rule 32)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 42
	INSTIF         goto state 23
	LISTAINSTRUCTIONgoto state 43

State 28

	INSTRUCTION -> move .                               (rule 37)

	';'            reduce using rule 37
	beginworld     reduce using rule 37
	beginworkon    reduce using rule 37
	endwork        reduce using rule 37
	else           reduce using rule 37
	end            reduce using rule 37
	defineinstructionreduce using rule 37
	%eof           reduce using rule 37


State 29

	INSTRUCTION -> turnleft .                           (rule 38)

	';'            reduce using rule 38
	beginworld     reduce using rule 38
	beginworkon    reduce using rule 38
	endwork        reduce using rule 38
	else           reduce using rule 38
	end            reduce using rule 38
	defineinstructionreduce using rule 38
	%eof           reduce using rule 38


State 30

	INSTRUCTION -> picktrash .                          (rule 39)

	';'            reduce using rule 39
	beginworld     reduce using rule 39
	beginworkon    reduce using rule 39
	endwork        reduce using rule 39
	else           reduce using rule 39
	end            reduce using rule 39
	defineinstructionreduce using rule 39
	%eof           reduce using rule 39


State 31

	INSTRUCTION -> droptrash .                          (rule 40)

	';'            reduce using rule 40
	beginworld     reduce using rule 40
	beginworkon    reduce using rule 40
	endwork        reduce using rule 40
	else           reduce using rule 40
	end            reduce using rule 40
	defineinstructionreduce using rule 40
	%eof           reduce using rule 40


State 32

	INSTRUCTION -> shutdown .                           (rule 41)

	';'            reduce using rule 41
	beginworld     reduce using rule 41
	beginworkon    reduce using rule 41
	endwork        reduce using rule 41
	else           reduce using rule 41
	end            reduce using rule 41
	defineinstructionreduce using rule 41
	%eof           reduce using rule 41


State 33

	INSTRUCTION -> Id .                                 (rule 42)

	';'            reduce using rule 42
	beginworld     reduce using rule 42
	beginworkon    reduce using rule 42
	endwork        reduce using rule 42
	else           reduce using rule 42
	end            reduce using rule 42
	defineinstructionreduce using rule 42
	%eof           reduce using rule 42


State 34

	START -> defineinstruction Id as . INSTRUCTION      (rule 5)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 41
	INSTIF         goto state 23

State 35

	START -> START defineinstruction Id . as INSTRUCTION    (rule 2)

	as             shift, and enter state 40


State 36

	START -> START beginworkon Id . INSTRUCTION endwork    (rule 3)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 39
	INSTIF         goto state 23

State 37

	START -> START beginworld Id . WORLD endworld       (rule 1)

	World          shift, and enter state 18
	Wall           shift, and enter state 19
	Place          shift, and enter state 20
	Startat        shift, and enter state 21

	WORLD          goto state 38
	SEENWORLD      goto state 14
	SEENSTART      goto state 15
	SEENSTARTandWORLDgoto state 16
	WALLorPLACE    goto state 17

State 38

	START -> START beginworld Id WORLD . endworld       (rule 1)
	WORLD -> WORLD . WALLorPLACE                        (rule 9)

	endworld       shift, and enter state 103
	Wall           shift, and enter state 19
	Place          shift, and enter state 20

	WALLorPLACE    goto state 79

State 39

	START -> START beginworkon Id INSTRUCTION . endwork    (rule 3)

	endwork        shift, and enter state 102


State 40

	START -> START defineinstruction Id as . INSTRUCTION    (rule 2)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 101
	INSTIF         goto state 23

State 41

	START -> defineinstruction Id as INSTRUCTION .      (rule 5)

	beginworld     reduce using rule 5
	beginworkon    reduce using rule 5
	defineinstructionreduce using rule 5
	%eof           reduce using rule 5


State 42

	LISTAINSTRUCTION -> INSTRUCTION .                   (rule 45)

	';'            reduce using rule 45
	end            reduce using rule 45


State 43

	INSTRUCTION -> begin LISTAINSTRUCTION . end         (rule 32)
	LISTAINSTRUCTION -> LISTAINSTRUCTION . ';' INSTRUCTION    (rule 44)

	';'            shift, and enter state 99
	end            shift, and enter state 100


State 44

	INSTRUCTION -> while BOOL . do INSTRUCTION          (rule 36)
	BOOL -> BOOL . or BOOL                              (rule 46)
	BOOL -> BOOL . and BOOL                             (rule 47)

	do             shift, and enter state 98
	and            shift, and enter state 94
	or             shift, and enter state 95


State 45

	BOOL -> frontisclear .                              (rule 49)

	then           reduce using rule 49
	do             reduce using rule 49
	and            reduce using rule 49
	or             reduce using rule 49


State 46

	BOOL -> leftisclear .                               (rule 50)

	then           reduce using rule 50
	do             reduce using rule 50
	and            reduce using rule 50
	or             reduce using rule 50


State 47

	BOOL -> rightisclear .                              (rule 51)

	then           reduce using rule 51
	do             reduce using rule 51
	and            reduce using rule 51
	or             reduce using rule 51


State 48

	BOOL -> lookingnorth .                              (rule 52)

	then           reduce using rule 52
	do             reduce using rule 52
	and            reduce using rule 52
	or             reduce using rule 52


State 49

	BOOL -> lookingeast .                               (rule 54)

	then           reduce using rule 54
	do             reduce using rule 54
	and            reduce using rule 54
	or             reduce using rule 54


State 50

	BOOL -> lookingwest .                               (rule 55)

	then           reduce using rule 55
	do             reduce using rule 55
	and            reduce using rule 55
	or             reduce using rule 55


State 51

	BOOL -> lookingsouth .                              (rule 53)

	then           reduce using rule 53
	do             reduce using rule 53
	and            reduce using rule 53
	or             reduce using rule 53


State 52

	BOOL -> foundtrash .                                (rule 56)

	then           reduce using rule 56
	do             reduce using rule 56
	and            reduce using rule 56
	or             reduce using rule 56


State 53

	BOOL -> carryingtrash .                             (rule 57)

	then           reduce using rule 57
	do             reduce using rule 57
	and            reduce using rule 57
	or             reduce using rule 57


State 54

	BOOL -> not . BOOL                                  (rule 48)

	frontisclear   shift, and enter state 45
	leftisclear    shift, and enter state 46
	rightisclear   shift, and enter state 47
	lookingnorth   shift, and enter state 48
	lookingeast    shift, and enter state 49
	lookingwest    shift, and enter state 50
	lookingsouth   shift, and enter state 51
	foundtrash     shift, and enter state 52
	carryingtrash  shift, and enter state 53
	not            shift, and enter state 54

	BOOL           goto state 97

State 55

	INSTRUCTION -> repeat int . times INSTRUCTION       (rule 35)

	times          shift, and enter state 96


State 56

	INSTIF -> if BOOL . then INSTRUCTION                (rule 43)
	BOOL -> BOOL . or BOOL                              (rule 46)
	BOOL -> BOOL . and BOOL                             (rule 47)

	then           shift, and enter state 93
	and            shift, and enter state 94
	or             shift, and enter state 95


State 57

	INSTRUCTION -> INSTIF else . INSTRUCTION            (rule 34)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 92
	INSTIF         goto state 23

State 58

	START -> beginworkon Id INSTRUCTION endwork .       (rule 6)

	beginworld     reduce using rule 6
	beginworkon    reduce using rule 6
	defineinstructionreduce using rule 6
	%eof           reduce using rule 6


State 59

	SEENWORLD -> Startat EJEX . EJEY heading DIRECTION    (rule 12)

	int            shift, and enter state 86

	EJEY           goto state 91

State 60

	EJEX -> int .                                       (rule 20)

	int            reduce using rule 20


State 61

	WALLorPLACE -> Place LISTAGARBAGE .                 (rule 19)
	LISTAGARBAGE -> LISTAGARBAGE . ',' GARBAGE          (rule 29)

	','            shift, and enter state 90
	endworld       reduce using rule 19
	World          reduce using rule 19
	Wall           reduce using rule 19
	Place          reduce using rule 19
	Startat        reduce using rule 19


State 62

	LISTAGARBAGE -> GARBAGE .                           (rule 30)

	','            reduce using rule 30
	endworld       reduce using rule 30
	World          reduce using rule 30
	Wall           reduce using rule 30
	Place          reduce using rule 30
	Startat        reduce using rule 30


State 63

	GARBAGE -> int . garbagecansin EJEX EJEY            (rule 31)

	garbagecansin  shift, and enter state 89


State 64

	PARED -> DIRECTION . of EJEX EJEY to EJEX EJEY      (rule 28)

	of             shift, and enter state 88


State 65

	WALLorPLACE -> Wall LISTAPARED .                    (rule 18)
	LISTAPARED -> LISTAPARED . ',' PARED                (rule 26)

	','            shift, and enter state 87
	endworld       reduce using rule 18
	World          reduce using rule 18
	Wall           reduce using rule 18
	Place          reduce using rule 18
	Startat        reduce using rule 18


State 66

	LISTAPARED -> PARED .                               (rule 27)

	','            reduce using rule 27
	endworld       reduce using rule 27
	World          reduce using rule 27
	Wall           reduce using rule 27
	Place          reduce using rule 27
	Startat        reduce using rule 27


State 67

	DIRECTION -> north .                                (rule 22)

	endworld       reduce using rule 22
	World          reduce using rule 22
	Wall           reduce using rule 22
	of             reduce using rule 22
	Place          reduce using rule 22


State 68

	DIRECTION -> south .                                (rule 23)

	endworld       reduce using rule 23
	World          reduce using rule 23
	Wall           reduce using rule 23
	of             reduce using rule 23
	Place          reduce using rule 23


State 69

	DIRECTION -> east .                                 (rule 24)

	endworld       reduce using rule 24
	World          reduce using rule 24
	Wall           reduce using rule 24
	of             reduce using rule 24
	Place          reduce using rule 24


State 70

	DIRECTION -> west .                                 (rule 25)

	endworld       reduce using rule 25
	World          reduce using rule 25
	Wall           reduce using rule 25
	of             reduce using rule 25
	Place          reduce using rule 25


State 71

	SEENSTART -> World EJEX . EJEY                      (rule 15)

	int            shift, and enter state 86

	EJEY           goto state 85

State 72

	SEENSTARTandWORLD -> SEENSTARTandWORLD WALLorPLACE .    (rule 16)

	World          reduce using rule 16
	Wall           reduce using rule 16
	Place          reduce using rule 16
	Startat        reduce using rule 16


State 73

	SEENSTART -> SEENSTARTandWORLD World . EJEX EJEY    (rule 13)

	int            shift, and enter state 60

	EJEX           goto state 84

State 74

	SEENWORLD -> SEENSTARTandWORLD Startat . EJEX EJEY heading DIRECTION    (rule 10)

	int            shift, and enter state 60

	EJEX           goto state 83

State 75

	SEENSTART -> SEENSTART WALLorPLACE .                (rule 14)

	Wall           reduce using rule 14
	Place          reduce using rule 14
	Startat        reduce using rule 14


State 76

	WORLD -> SEENSTART Startat . EJEX EJEY heading DIRECTION    (rule 8)

	int            shift, and enter state 60

	EJEX           goto state 82

State 77

	SEENWORLD -> SEENWORLD WALLorPLACE .                (rule 11)

	World          reduce using rule 11
	Wall           reduce using rule 11
	Place          reduce using rule 11


State 78

	WORLD -> SEENWORLD World . EJEX EJEY                (rule 7)

	int            shift, and enter state 60

	EJEX           goto state 81

State 79

	WORLD -> WORLD WALLorPLACE .                        (rule 9)

	endworld       reduce using rule 9
	Wall           reduce using rule 9
	Place          reduce using rule 9


State 80

	START -> beginworld Id WORLD endworld .             (rule 4)

	beginworld     reduce using rule 4
	beginworkon    reduce using rule 4
	defineinstructionreduce using rule 4
	%eof           reduce using rule 4


State 81

	WORLD -> SEENWORLD World EJEX . EJEY                (rule 7)

	int            shift, and enter state 86

	EJEY           goto state 118

State 82

	WORLD -> SEENSTART Startat EJEX . EJEY heading DIRECTION    (rule 8)

	int            shift, and enter state 86

	EJEY           goto state 117

State 83

	SEENWORLD -> SEENSTARTandWORLD Startat EJEX . EJEY heading DIRECTION    (rule 10)

	int            shift, and enter state 86

	EJEY           goto state 116

State 84

	SEENSTART -> SEENSTARTandWORLD World EJEX . EJEY    (rule 13)

	int            shift, and enter state 86

	EJEY           goto state 115

State 85

	SEENSTART -> World EJEX EJEY .                      (rule 15)

	Wall           reduce using rule 15
	Place          reduce using rule 15
	Startat        reduce using rule 15


State 86

	EJEY -> int .                                       (rule 21)

	','            reduce using rule 21
	endworld       reduce using rule 21
	World          reduce using rule 21
	Wall           reduce using rule 21
	to             reduce using rule 21
	Place          reduce using rule 21
	Startat        reduce using rule 21
	heading        reduce using rule 21


State 87

	LISTAPARED -> LISTAPARED ',' . PARED                (rule 26)

	north          shift, and enter state 67
	south          shift, and enter state 68
	east           shift, and enter state 69
	west           shift, and enter state 70

	DIRECTION      goto state 64
	PARED          goto state 114

State 88

	PARED -> DIRECTION of . EJEX EJEY to EJEX EJEY      (rule 28)

	int            shift, and enter state 60

	EJEX           goto state 113

State 89

	GARBAGE -> int garbagecansin . EJEX EJEY            (rule 31)

	int            shift, and enter state 60

	EJEX           goto state 112

State 90

	LISTAGARBAGE -> LISTAGARBAGE ',' . GARBAGE          (rule 29)

	int            shift, and enter state 63

	GARBAGE        goto state 111

State 91

	SEENWORLD -> Startat EJEX EJEY . heading DIRECTION    (rule 12)

	heading        shift, and enter state 110


State 92

	INSTRUCTION -> INSTIF else INSTRUCTION .            (rule 34)

	';'            reduce using rule 34
	beginworld     reduce using rule 34
	beginworkon    reduce using rule 34
	endwork        reduce using rule 34
	else           reduce using rule 34
	end            reduce using rule 34
	defineinstructionreduce using rule 34
	%eof           reduce using rule 34


State 93

	INSTIF -> if BOOL then . INSTRUCTION                (rule 43)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 109
	INSTIF         goto state 23

State 94

	BOOL -> BOOL and . BOOL                             (rule 47)

	frontisclear   shift, and enter state 45
	leftisclear    shift, and enter state 46
	rightisclear   shift, and enter state 47
	lookingnorth   shift, and enter state 48
	lookingeast    shift, and enter state 49
	lookingwest    shift, and enter state 50
	lookingsouth   shift, and enter state 51
	foundtrash     shift, and enter state 52
	carryingtrash  shift, and enter state 53
	not            shift, and enter state 54

	BOOL           goto state 108

State 95

	BOOL -> BOOL or . BOOL                              (rule 46)

	frontisclear   shift, and enter state 45
	leftisclear    shift, and enter state 46
	rightisclear   shift, and enter state 47
	lookingnorth   shift, and enter state 48
	lookingeast    shift, and enter state 49
	lookingwest    shift, and enter state 50
	lookingsouth   shift, and enter state 51
	foundtrash     shift, and enter state 52
	carryingtrash  shift, and enter state 53
	not            shift, and enter state 54

	BOOL           goto state 107

State 96

	INSTRUCTION -> repeat int times . INSTRUCTION       (rule 35)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 106
	INSTIF         goto state 23

State 97

	BOOL -> BOOL . or BOOL                              (rule 46)
	BOOL -> BOOL . and BOOL                             (rule 47)
	BOOL -> not BOOL .                                  (rule 48)

	then           reduce using rule 48
	do             reduce using rule 48
	and            reduce using rule 48
	or             reduce using rule 48


State 98

	INSTRUCTION -> while BOOL do . INSTRUCTION          (rule 36)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 105
	INSTIF         goto state 23

State 99

	LISTAINSTRUCTION -> LISTAINSTRUCTION ';' . INSTRUCTION    (rule 44)

	if             shift, and enter state 24
	repeat         shift, and enter state 25
	while          shift, and enter state 26
	begin          shift, and enter state 27
	move           shift, and enter state 28
	turnleft       shift, and enter state 29
	picktrash      shift, and enter state 30
	droptrash      shift, and enter state 31
	shutdown       shift, and enter state 32
	Id             shift, and enter state 33

	INSTRUCTION    goto state 104
	INSTIF         goto state 23

State 100

	INSTRUCTION -> begin LISTAINSTRUCTION end .         (rule 32)

	';'            reduce using rule 32
	beginworld     reduce using rule 32
	beginworkon    reduce using rule 32
	endwork        reduce using rule 32
	else           reduce using rule 32
	end            reduce using rule 32
	defineinstructionreduce using rule 32
	%eof           reduce using rule 32


State 101

	START -> START defineinstruction Id as INSTRUCTION .    (rule 2)

	beginworld     reduce using rule 2
	beginworkon    reduce using rule 2
	defineinstructionreduce using rule 2
	%eof           reduce using rule 2


State 102

	START -> START beginworkon Id INSTRUCTION endwork .    (rule 3)

	beginworld     reduce using rule 3
	beginworkon    reduce using rule 3
	defineinstructionreduce using rule 3
	%eof           reduce using rule 3


State 103

	START -> START beginworld Id WORLD endworld .       (rule 1)

	beginworld     reduce using rule 1
	beginworkon    reduce using rule 1
	defineinstructionreduce using rule 1
	%eof           reduce using rule 1


State 104

	LISTAINSTRUCTION -> LISTAINSTRUCTION ';' INSTRUCTION .    (rule 44)

	';'            reduce using rule 44
	end            reduce using rule 44


State 105

	INSTRUCTION -> while BOOL do INSTRUCTION .          (rule 36)

	';'            reduce using rule 36
	beginworld     reduce using rule 36
	beginworkon    reduce using rule 36
	endwork        reduce using rule 36
	else           reduce using rule 36
	end            reduce using rule 36
	defineinstructionreduce using rule 36
	%eof           reduce using rule 36


State 106

	INSTRUCTION -> repeat int times INSTRUCTION .       (rule 35)

	';'            reduce using rule 35
	beginworld     reduce using rule 35
	beginworkon    reduce using rule 35
	endwork        reduce using rule 35
	else           reduce using rule 35
	end            reduce using rule 35
	defineinstructionreduce using rule 35
	%eof           reduce using rule 35


State 107

	BOOL -> BOOL . or BOOL                              (rule 46)
	BOOL -> BOOL or BOOL .                              (rule 46)
	BOOL -> BOOL . and BOOL                             (rule 47)

	then           reduce using rule 46
	do             reduce using rule 46
	and            shift, and enter state 94
	or             reduce using rule 46


State 108

	BOOL -> BOOL . or BOOL                              (rule 46)
	BOOL -> BOOL . and BOOL                             (rule 47)
	BOOL -> BOOL and BOOL .                             (rule 47)

	then           reduce using rule 47
	do             reduce using rule 47
	and            reduce using rule 47
	or             reduce using rule 47


State 109

	INSTIF -> if BOOL then INSTRUCTION .                (rule 43)

	';'            reduce using rule 43
	beginworld     reduce using rule 43
	beginworkon    reduce using rule 43
	endwork        reduce using rule 43
	else           reduce using rule 43
	end            reduce using rule 43
	defineinstructionreduce using rule 43
	%eof           reduce using rule 43


State 110

	SEENWORLD -> Startat EJEX EJEY heading . DIRECTION    (rule 12)

	north          shift, and enter state 67
	south          shift, and enter state 68
	east           shift, and enter state 69
	west           shift, and enter state 70

	DIRECTION      goto state 123

State 111

	LISTAGARBAGE -> LISTAGARBAGE ',' GARBAGE .          (rule 29)

	','            reduce using rule 29
	endworld       reduce using rule 29
	World          reduce using rule 29
	Wall           reduce using rule 29
	Place          reduce using rule 29
	Startat        reduce using rule 29


State 112

	GARBAGE -> int garbagecansin EJEX . EJEY            (rule 31)

	int            shift, and enter state 86

	EJEY           goto state 122

State 113

	PARED -> DIRECTION of EJEX . EJEY to EJEX EJEY      (rule 28)

	int            shift, and enter state 86

	EJEY           goto state 121

State 114

	LISTAPARED -> LISTAPARED ',' PARED .                (rule 26)

	','            reduce using rule 26
	endworld       reduce using rule 26
	World          reduce using rule 26
	Wall           reduce using rule 26
	Place          reduce using rule 26
	Startat        reduce using rule 26


State 115

	SEENSTART -> SEENSTARTandWORLD World EJEX EJEY .    (rule 13)

	Wall           reduce using rule 13
	Place          reduce using rule 13
	Startat        reduce using rule 13


State 116

	SEENWORLD -> SEENSTARTandWORLD Startat EJEX EJEY . heading DIRECTION    (rule 10)

	heading        shift, and enter state 120


State 117

	WORLD -> SEENSTART Startat EJEX EJEY . heading DIRECTION    (rule 8)

	heading        shift, and enter state 119


State 118

	WORLD -> SEENWORLD World EJEX EJEY .                (rule 7)

	endworld       reduce using rule 7
	Wall           reduce using rule 7
	Place          reduce using rule 7


State 119

	WORLD -> SEENSTART Startat EJEX EJEY heading . DIRECTION    (rule 8)

	north          shift, and enter state 67
	south          shift, and enter state 68
	east           shift, and enter state 69
	west           shift, and enter state 70

	DIRECTION      goto state 126

State 120

	SEENWORLD -> SEENSTARTandWORLD Startat EJEX EJEY heading . DIRECTION    (rule 10)

	north          shift, and enter state 67
	south          shift, and enter state 68
	east           shift, and enter state 69
	west           shift, and enter state 70

	DIRECTION      goto state 125

State 121

	PARED -> DIRECTION of EJEX EJEY . to EJEX EJEY      (rule 28)

	to             shift, and enter state 124


State 122

	GARBAGE -> int garbagecansin EJEX EJEY .            (rule 31)

	','            reduce using rule 31
	endworld       reduce using rule 31
	World          reduce using rule 31
	Wall           reduce using rule 31
	Place          reduce using rule 31
	Startat        reduce using rule 31


State 123

	SEENWORLD -> Startat EJEX EJEY heading DIRECTION .    (rule 12)

	World          reduce using rule 12
	Wall           reduce using rule 12
	Place          reduce using rule 12


State 124

	PARED -> DIRECTION of EJEX EJEY to . EJEX EJEY      (rule 28)

	int            shift, and enter state 60

	EJEX           goto state 127

State 125

	SEENWORLD -> SEENSTARTandWORLD Startat EJEX EJEY heading DIRECTION .    (rule 10)

	World          reduce using rule 10
	Wall           reduce using rule 10
	Place          reduce using rule 10


State 126

	WORLD -> SEENSTART Startat EJEX EJEY heading DIRECTION .    (rule 8)

	endworld       reduce using rule 8
	Wall           reduce using rule 8
	Place          reduce using rule 8


State 127

	PARED -> DIRECTION of EJEX EJEY to EJEX . EJEY      (rule 28)

	int            shift, and enter state 86

	EJEY           goto state 128

State 128

	PARED -> DIRECTION of EJEX EJEY to EJEX EJEY .      (rule 28)

	','            reduce using rule 28
	endworld       reduce using rule 28
	World          reduce using rule 28
	Wall           reduce using rule 28
	Place          reduce using rule 28
	Startat        reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 58
Number of terminals: 48
Number of non-terminals: 18
Number of states: 129
